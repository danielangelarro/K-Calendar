"""Add GroupHierarchy Table

Revision ID: 656dd3471023
Revises: 
Create Date: 2024-11-29 15:23:21.227712

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '656dd3471023'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True, comment='Encrypted'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)

    op.create_table('events',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('start_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('creator', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['creator'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_events_id'), ['id'], unique=False)

    op.create_table('groups',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('group_name', sa.String(length=255), nullable=True),
    sa.Column('owner_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_groups_id'), ['id'], unique=False)

    op.create_table('group_hierarchy',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_group_id', sa.String(length=36), nullable=False),
    sa.Column('child_group_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['child_group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['parent_group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id', 'parent_group_id', 'child_group_id')
    )
    with op.batch_alter_table('group_hierarchy', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_group_hierarchy_id'), ['id'], unique=False)

    op.create_table('member',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('group_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('member', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_member_id'), ['id'], unique=False)

    op.create_table('notification',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('recipient', sa.String(length=36), nullable=False),
    sa.Column('sender', sa.String(length=36), nullable=False),
    sa.Column('event', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['event'], ['events.id'], ),
    sa.ForeignKeyConstraint(['recipient'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_id'), ['id'], unique=False)

    op.create_table('user_event',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('event_id', sa.String(length=36), nullable=True),
    sa.Column('status', sa.Enum('Accepted', 'Pending', 'Cancelled', name='status_enum'), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_event', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_event_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_event', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_event_id'))

    op.drop_table('user_event')
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_id'))

    op.drop_table('notification')
    with op.batch_alter_table('member', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_member_id'))

    op.drop_table('member')
    with op.batch_alter_table('group_hierarchy', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_group_hierarchy_id'))

    op.drop_table('group_hierarchy')
    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_groups_id'))

    op.drop_table('groups')
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_events_id'))

    op.drop_table('events')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_id'))

    op.drop_table('users')
    # ### end Alembic commands ###
